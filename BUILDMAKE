#edit-mode: -*- python -*-
#encoding: UTF-8

# 工作路径
WORKROOT('../../')

# buildmake bin path
BUILDMAKE_BIN_PATH('~/tools/buildmake/buildmake')

# 使用硬链接copy.
COPY_USING_HARD_LINK(True)

# C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.9.8.7\\\"')
# 为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

# C编译参数.
CFLAGS('-g -pipe -W -Wall -fPIC')

# C++编译参数.
CXXFLAGS('-g -pipe -W -Wall -fPIC -std=gnu++11')

# 头文件路径.
INCPATHS('. ./include ./output ./output/include ./deps/libev/include ./src')

# 使用库
LIBS('./deps/libev/lib/libev.a')

# Default git domain
#DEFAULT_GIT_DOMAIN('https://github.com/')
# Depend libs in git
# Using default git domain
#DEP_CONFIGS('str2num', 'librtcbase', 'str2num/librtcbase')

# 链接参数.
LDFLAGS('-lpthread -lcrypto -lrt')

DEFAULT_LIB_INCLUDE_DIR('ice')

user_sources=GLOB('src/p2p/*.cpp src/rtcbase/*.cpp') 
user_headers=GLOB('src/p2p/*.h src/rtcbase/*.cpp')

# 可执行文件
#Application('ice',Sources(user_sources))
# 静态库
StaticLibrary('ice',Sources(user_sources),HeaderFiles(user_headers))
# 共享库
#SharedLibrary('ice',Sources(user_sources),HeaderFiles(user_headers))
# 子目录
#Directory('ice')

